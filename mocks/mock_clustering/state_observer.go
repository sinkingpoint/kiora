// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/clustering/state_observer.go

// Package mock_clustering is a generated GoMock package.
package mock_clustering

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	clustering "github.com/sinkingpoint/kiora/internal/clustering"
)

// MockObserver is a mock of Observer interface.
type MockObserver struct {
	ctrl     *gomock.Controller
	recorder *MockObserverMockRecorder
}

// MockObserverMockRecorder is the mock recorder for MockObserver.
type MockObserverMockRecorder struct {
	mock *MockObserver
}

// NewMockObserver creates a new mock instance.
func NewMockObserver(ctrl *gomock.Controller) *MockObserver {
	mock := &MockObserver{ctrl: ctrl}
	mock.recorder = &MockObserverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockObserver) EXPECT() *MockObserverMockRecorder {
	return m.recorder
}

// AddServer mocks base method.
func (m *MockObserver) AddServer(server clustering.Server) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddServer", server)
}

// AddServer indicates an expected call of AddServer.
func (mr *MockObserverMockRecorder) AddServer(server interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddServer", reflect.TypeOf((*MockObserver)(nil).AddServer), server)
}

// RemoveServer mocks base method.
func (m *MockObserver) RemoveServer(server clustering.Server) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveServer", server)
}

// RemoveServer indicates an expected call of RemoveServer.
func (mr *MockObserverMockRecorder) RemoveServer(server interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveServer", reflect.TypeOf((*MockObserver)(nil).RemoveServer), server)
}
