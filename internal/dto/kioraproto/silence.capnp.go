// Code generated by capnpc-go. DO NOT EDIT.

package kioraproto

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
)

type PostSilencesRequest capnp.Struct

// PostSilencesRequest_TypeID is the unique identifier for the type PostSilencesRequest.
const PostSilencesRequest_TypeID = 0x99319297481725a3

func NewPostSilencesRequest(s *capnp.Segment) (PostSilencesRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostSilencesRequest(st), err
}

func NewRootPostSilencesRequest(s *capnp.Segment) (PostSilencesRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostSilencesRequest(st), err
}

func ReadRootPostSilencesRequest(msg *capnp.Message) (PostSilencesRequest, error) {
	root, err := msg.Root()
	return PostSilencesRequest(root.Struct()), err
}

func (s PostSilencesRequest) String() string {
	str, _ := text.Marshal(0x99319297481725a3, capnp.Struct(s))
	return str
}

func (s PostSilencesRequest) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (PostSilencesRequest) DecodeFromPtr(p capnp.Ptr) PostSilencesRequest {
	return PostSilencesRequest(capnp.Struct{}.DecodeFromPtr(p))
}

func (s PostSilencesRequest) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s PostSilencesRequest) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s PostSilencesRequest) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s PostSilencesRequest) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s PostSilencesRequest) Silences() (Silence_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return Silence_List(p.List()), err
}

func (s PostSilencesRequest) HasSilences() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s PostSilencesRequest) SetSilences(v Silence_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewSilences sets the silences field to a newly
// allocated Silence_List, preferring placement in s's segment.
func (s PostSilencesRequest) NewSilences(n int32) (Silence_List, error) {
	l, err := NewSilence_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Silence_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// PostSilencesRequest_List is a list of PostSilencesRequest.
type PostSilencesRequest_List = capnp.StructList[PostSilencesRequest]

// NewPostSilencesRequest creates a new list of PostSilencesRequest.
func NewPostSilencesRequest_List(s *capnp.Segment, sz int32) (PostSilencesRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[PostSilencesRequest](l), err
}

// PostSilencesRequest_Future is a wrapper for a PostSilencesRequest promised by a client call.
type PostSilencesRequest_Future struct{ *capnp.Future }

func (f PostSilencesRequest_Future) Struct() (PostSilencesRequest, error) {
	p, err := f.Future.Ptr()
	return PostSilencesRequest(p.Struct()), err
}

type Silence capnp.Struct

// Silence_TypeID is the unique identifier for the type Silence.
const Silence_TypeID = 0xb87a89aa50b3cd89

func NewSilence(s *capnp.Segment) (Silence, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Silence(st), err
}

func NewRootSilence(s *capnp.Segment) (Silence, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Silence(st), err
}

func ReadRootSilence(msg *capnp.Message) (Silence, error) {
	root, err := msg.Root()
	return Silence(root.Struct()), err
}

func (s Silence) String() string {
	str, _ := text.Marshal(0xb87a89aa50b3cd89, capnp.Struct(s))
	return str
}

func (s Silence) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Silence) DecodeFromPtr(p capnp.Ptr) Silence {
	return Silence(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Silence) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Silence) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Silence) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Silence) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Silence_List is a list of Silence.
type Silence_List = capnp.StructList[Silence]

// NewSilence creates a new list of Silence.
func NewSilence_List(s *capnp.Segment, sz int32) (Silence_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Silence](l), err
}

// Silence_Future is a wrapper for a Silence promised by a client call.
type Silence_Future struct{ *capnp.Future }

func (f Silence_Future) Struct() (Silence, error) {
	p, err := f.Future.Ptr()
	return Silence(p.Struct()), err
}

const schema_d9e4592b8a563262 = "x\xda\x128\xe5\xc0b\xc8\xab\xcf\xca\xc0\x14h\xc3\xca" +
	"\xf6\x7f\xb1\xaa\xb8\xc7\xf4I\x863\x19\x04\xf9\x18\xff'" +
	"\x19\x85uiG>\xb9\xc9\xc0\xca\xc8\xce\xc0`\\\xcb" +
	"$\xc4(\xdc\xcb\xc4\xce\xc0 \xdc\xc9d\xcf\xc0\xf8\xbf" +
	"\xf3\xec\xe6\x80U\x9dU;P\x15\xb3\x80\x14\xece\xda" +
	"$|\x94\x89\x9da\xd2\xff\xe2\xcc\x9c\xd4\xbc\xe4T=" +
	"\xe6\xe4\xc4\x82\xbc\x02\xab\x80\xfc\xe2\x92`\x88PqP" +
	"jaij1cI\x00#c \x0b3\x0b\x03\x03" +
	"\x0b#\x03\x83 \xaf\x17\x03C \x0f3c\xa0\x06\x13" +
	"#Lw1\x03\x03\x03#\x1f\x03c\x003#\xa3\x00" +
	"\xc2^\x06F\x90 \xdc\x0aF\x88\x15\xc1\x99\xf2`~" +
	"\x00## \x00\x00\xff\xffh\x9e?J"

func init() {
	schemas.Register(schema_d9e4592b8a563262,
		0x99319297481725a3,
		0xb87a89aa50b3cd89)
}
