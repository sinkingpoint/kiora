// Code generated by capnpc-go. DO NOT EDIT.

package kioraproto

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
)

type Silences capnp.Struct

// Silences_TypeID is the unique identifier for the type Silences.
const Silences_TypeID = 0x90ec68d898c77760

func NewSilences(s *capnp.Segment) (Silences, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Silences(st), err
}

func NewRootSilences(s *capnp.Segment) (Silences, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Silences(st), err
}

func ReadRootSilences(msg *capnp.Message) (Silences, error) {
	root, err := msg.Root()
	return Silences(root.Struct()), err
}

func (s Silences) String() string {
	str, _ := text.Marshal(0x90ec68d898c77760, capnp.Struct(s))
	return str
}

func (s Silences) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Silences) DecodeFromPtr(p capnp.Ptr) Silences {
	return Silences(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Silences) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Silences) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Silences) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Silences) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Silences) Silences() (Silence_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return Silence_List(p.List()), err
}

func (s Silences) HasSilences() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Silences) SetSilences(v Silence_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewSilences sets the silences field to a newly
// allocated Silence_List, preferring placement in s's segment.
func (s Silences) NewSilences(n int32) (Silence_List, error) {
	l, err := NewSilence_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Silence_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// Silences_List is a list of Silences.
type Silences_List = capnp.StructList[Silences]

// NewSilences creates a new list of Silences.
func NewSilences_List(s *capnp.Segment, sz int32) (Silences_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Silences](l), err
}

// Silences_Future is a wrapper for a Silences promised by a client call.
type Silences_Future struct{ *capnp.Future }

func (f Silences_Future) Struct() (Silences, error) {
	p, err := f.Future.Ptr()
	return Silences(p.Struct()), err
}

type Silence capnp.Struct

// Silence_TypeID is the unique identifier for the type Silence.
const Silence_TypeID = 0xb87a89aa50b3cd89

func NewSilence(s *capnp.Segment) (Silence, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Silence(st), err
}

func NewRootSilence(s *capnp.Segment) (Silence, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Silence(st), err
}

func ReadRootSilence(msg *capnp.Message) (Silence, error) {
	root, err := msg.Root()
	return Silence(root.Struct()), err
}

func (s Silence) String() string {
	str, _ := text.Marshal(0xb87a89aa50b3cd89, capnp.Struct(s))
	return str
}

func (s Silence) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Silence) DecodeFromPtr(p capnp.Ptr) Silence {
	return Silence(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Silence) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Silence) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Silence) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Silence) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Silence_List is a list of Silence.
type Silence_List = capnp.StructList[Silence]

// NewSilence creates a new list of Silence.
func NewSilence_List(s *capnp.Segment, sz int32) (Silence_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Silence](l), err
}

// Silence_Future is a wrapper for a Silence promised by a client call.
type Silence_Future struct{ *capnp.Future }

func (f Silence_Future) Struct() (Silence, error) {
	p, err := f.Future.Ptr()
	return Silence(p.Struct()), err
}

const schema_d9e4592b8a563262 = "x\xda\x128\xe1\xc0b\xc8\xab\xcf\xca\xc0\x14h\xc3\xca" +
	"\xf6?\xa1\xfc\xf8\x8c\x1b\x19o&0\x08\xf21\xfeO" +
	"2\x0a\xeb\xd2\x8e|r\x93\x81\x95\x91\x9d\x81A\xb8\x96" +
	"i\x97p+\x13\x88\xd5\xc8d\xcf\xc0\xf8\xbf\xf3\xec\xe6" +
	"\x80U\x9dU;P\xd5\xb2\x80\x14le\xda$\xbc\x97" +
	"\x89\x9da\xd2\xff\xe2\xcc\x9c\xd4\xbc\xe4T=\xc6\xe4\xc4" +
	"\x82\xbc\x02\xab\xe0L{0\xbf8\x80\x911\x90\x85\x99" +
	"\x85\x81\x81\x85\x91\x81A\x90\xd7\x8b\x81!\x90\x87\x991" +
	"P\x83\x89\x11\xa6\xa5\x98\x81\x81\x81\x91\x8f\x811\x80\x99" +
	"\x91Q\x00a\x19\x03#H\x10\xd3\\y0?\x80\x91" +
	"\x11\x10\x00\x00\xff\xff\xc8\xd3=4"

func init() {
	schemas.Register(schema_d9e4592b8a563262,
		0x90ec68d898c77760,
		0xb87a89aa50b3cd89)
}
